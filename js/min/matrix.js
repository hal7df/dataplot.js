function Matrix(c,g,e){c=void 0===c?1:c;g=void 0===g?1:g;e=void 0===e?!1:e;this.rows=c;this.cols=g;this.data=[];for(var h=0;h<c;++h){this.data.push(Array(g));for(var k=0;e&&k<this.data[h].length;++k)this.data[h][k]=0}this.set=function(a,b,f){this._checkIndex(a,b);if("number"!==typeof f)throw new TypeError("`value' must be a number");this.data[a][b]=f};this.setRow=function(a,b){this._checkRow(a);if(b.constructor!==Array)throw new TypeError("`rowValues' must be an array of numbers");if(b.length!==this.cols)throw new RangeError("Row must be of length "+
this.cols.toString());this.data[a]=b.slice(0)};this.setCol=function(a,b){this._checkCol(a);if(b.constructor!==Array)throw new TypeError("`colValues' must be an array of numbers.");if(b.length!==this.rows)throw new RangeError("Column must be of length "+this.rows.toString());for(var f=0;f<this.rows;++f)this.data[f][a]=b[f]};this.get=function(a,b){this._checkIndex(a,b);return this.data[a][b]};this.getRow=function(a){this._checkRow(a);return this.data[a]};this.getCol=function(a){this._checkCol(a);for(var b=
[],f=0;f<this.rows;++f)b.push(this.data[f][a]);return b};this.print=function(){console.table(this.data)};this.equals=function(a){if(a.rows!==this.rows||a.cols!==this.cols)return!1;for(var b=0;b<this.rows;++b)for(var f=0;f<this.cols;++f)if(this.get(b,f)!==a.get(b,f))return!1;return!0};this.rref=function(a){if(a&&a.rows!==this.rows)throw new RangeError("Augment dimension mismatch");for(var b={rref:Matrix.copy(this),augment:void 0!==a?Matrix.copy(a):a},f=b.rref.rows<b.rref.cols?b.rref.rows:b.rref.cols,
d,c=0;c<f;++c){for(d=c;d<f&&0===b.rref.get(d,c);)++d;if(d<b.rref.rows){d!==c&&d<b.rref.rows&&(b.rref._swapRows(c,d),a&&b.augment._swapRows(c,d));d=1/b.rref.get(c,c);b.rref._scaleRow(c,d);a&&b.augment._scaleRow(c,d);for(var e=0;e<b.rref.rows;++e)e!==c&&(d=-1*b.rref.get(e,c),0!==d&&(b.rref._addRow(e,b.rref.getRow(c),d),a&&b.augment._addRow(e,b.augment.getRow(c),d)))}}return b};this.transpose=function(){for(var a=new Matrix(this.cols,this.rows),b=0;b<this.rows;++b)a.setCol(b,this.getRow());return a};
this.inverse=function(){if(this.rows!==this.cols)throw new RangeError("Matrix not square");if(1===this.rows&&1===this.cols)return 1/this.get(0,0);var a=Matrix.identity(this.rows),b=this.rref(a);if(b.rref.equals(a))return b.augment;throw Error("Matrix not invertible");};this.scale=function(a){for(var b=new Matrix(this.rows,this.cols),f=0;f<this.rows;++f)for(var c=0;c<this.cols;++c)b.set(f,c,this.get(f,c)*a)};this.multiply=function(a){if(1===a.cols&&1===a.rows)return this.scale(a.get(0,0));if(this.cols!==
a.rows)throw new RangeError("Dimension mismatch");for(var b=new Matrix(this.rows,a.cols),c=0;c<this.rows;++c)for(var d=0;d<a.cols;++d)b.set(c,d,Matrix.dot(this.getRow(c),a.getCol(d)));return b};this._checkRow=function(a){if(0>a||a>=this.rows)throw new RangeError("Row index out of range");};this._checkCol=function(a){if(0>a||a>=this.cols)throw new RangeError("Column index out of range");};this._checkIndex=function(a,b){this._checkRow(a);this._checkCol(b)};this._scaleRow=function(a,b){this._checkRow(a);
for(var c=0;c<this.cols;++c)this.data[a][c]*=b};this._addRow=function(a,b,c){this._checkRow(a);if(b.length!==this.cols)throw new RangeError("Added row must be of length "+cols.toString());c=void 0===c?1:c;for(var d=0;d<this.cols;++d)this.data[a][d]+=b[d]*c};this._swapRows=function(a,b){this._checkRow(a);this._checkRow(b);var c=this.getRow(a).slice();this.setRow(a,this.getRow(b));this.setRow(b,c)}}
Matrix.copy=function(c){for(var g=new Matrix(c.rows,c.cols),e=0;e<g.rows;++e)g.setRow(e,c.getRow(e));return g};Matrix.colFromArray=function(c){colVec=new Matrix(c.length,1);colVec.setCol(0,c);return colVec};Matrix.rowFromArray=function(c){rowVec=new Matrix(1,c.length);rowVec.setRow(0,c);return rowVec};Matrix.dot=function(c,g){if(c.length!==g.length)throw new RangeError("Input vectors of unequal lengths");for(var e,h=0;h<c.length;++h)e+=c[h]*g[h];return e};
Matrix.identity=function(c){for(var g=new Matrix(c,c,!0),e=0;e<c;++e)g.set(e,e,1);return g};
